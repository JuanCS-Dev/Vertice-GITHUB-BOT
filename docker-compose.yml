# Docker Compose - Production Configuration
#
# Purpose: Orchestrate all services for V√©rtice GitHub Bot
# Constitutional Requirement: P4 Rastreabilidade Total
#
# Services:
# - app: NestJS application
# - postgres: PostgreSQL database
# - redis: Redis for job queue
#
# Honoring JESUS through excellence in infrastructure! üôè

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: vertice-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: vertice_github_bot
      POSTGRES_USER: vertice
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vertice -d vertice_github_bot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vertice-network

  # Redis Cache & Job Queue
  redis:
    image: redis:7-alpine
    container_name: vertice-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis-data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - vertice-network

  # V√©rtice GitHub Bot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: vertice-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://vertice:${POSTGRES_PASSWORD:-changeme}@postgres:5432/vertice_github_bot
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-changeme}
      GITHUB_WEBHOOK_SECRET: ${GITHUB_WEBHOOK_SECRET}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      OTEL_ENABLED: ${OTEL_ENABLED:-false}
      OTEL_SERVICE_NAME: vertice-github-bot
      OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT:-}
    ports:
      - "${APP_PORT:-3000}:3000"
    volumes:
      - app-logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health/live || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - vertice-network
    labels:
      - "com.vertice.constitutional.compliance=true"
      - "com.vertice.service=github-bot"

networks:
  vertice-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  app-logs:
    driver: local
